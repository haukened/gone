name: Build

on:
  push:
    branches: [main, develop]
    tags: ['v*.*.*', 'v*.*', 'v*']
    paths-ignore:
      - '.github/instructions/**'
      - 'scripts/**'
      - '.codacy.yml'
      - '.gitignore'
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running the workflow'
        required: false

jobs:
  # Fast correctness check for PRs and branch pushes. No artifacts.
  verify:
    runs-on: ubuntu-latest
    # Skip when we're building tagged releases (handled by build_release)
    if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
          check-latest: true

      - name: Restore Go module cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      # Ensure production pipeline compiles (minify + embed + -tags=prod)
      - name: Build (prod via Taskfile)
        run: $HOME/go/bin/task prod

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Save Go module cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Upload coverage to Codacy
        if: github.ref == 'refs/heads/main'
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.out
          language: 'go'
          force-coverage-parser: 'go'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build and create release only on tags.
  build_release:
    runs-on: ubuntu-latest
    needs: verify
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
          check-latest: true

      - name: Restore Go module cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Build (prod via Taskfile)
        run: $HOME/go/bin/task prod


      # On tags, cut a GitHub Release with the built binary
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/gone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}